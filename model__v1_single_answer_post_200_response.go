/*
api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package UpStudyGoSdk

import (
	"encoding/json"
)

// checks if the V1SingleAnswerPost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1SingleAnswerPost200Response{}

// V1SingleAnswerPost200Response struct for V1SingleAnswerPost200Response
type V1SingleAnswerPost200Response struct {
	Data *SolverSelfSimpleResponse `json:"data,omitempty"`
	ErrMsg *string `json:"err_msg,omitempty"`
}

// NewV1SingleAnswerPost200Response instantiates a new V1SingleAnswerPost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1SingleAnswerPost200Response() *V1SingleAnswerPost200Response {
	this := V1SingleAnswerPost200Response{}
	return &this
}

// NewV1SingleAnswerPost200ResponseWithDefaults instantiates a new V1SingleAnswerPost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1SingleAnswerPost200ResponseWithDefaults() *V1SingleAnswerPost200Response {
	this := V1SingleAnswerPost200Response{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *V1SingleAnswerPost200Response) GetData() SolverSelfSimpleResponse {
	if o == nil || IsNil(o.Data) {
		var ret SolverSelfSimpleResponse
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SingleAnswerPost200Response) GetDataOk() (*SolverSelfSimpleResponse, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *V1SingleAnswerPost200Response) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given SolverSelfSimpleResponse and assigns it to the Data field.
func (o *V1SingleAnswerPost200Response) SetData(v SolverSelfSimpleResponse) {
	o.Data = &v
}

// GetErrMsg returns the ErrMsg field value if set, zero value otherwise.
func (o *V1SingleAnswerPost200Response) GetErrMsg() string {
	if o == nil || IsNil(o.ErrMsg) {
		var ret string
		return ret
	}
	return *o.ErrMsg
}

// GetErrMsgOk returns a tuple with the ErrMsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SingleAnswerPost200Response) GetErrMsgOk() (*string, bool) {
	if o == nil || IsNil(o.ErrMsg) {
		return nil, false
	}
	return o.ErrMsg, true
}

// HasErrMsg returns a boolean if a field has been set.
func (o *V1SingleAnswerPost200Response) HasErrMsg() bool {
	if o != nil && !IsNil(o.ErrMsg) {
		return true
	}

	return false
}

// SetErrMsg gets a reference to the given string and assigns it to the ErrMsg field.
func (o *V1SingleAnswerPost200Response) SetErrMsg(v string) {
	o.ErrMsg = &v
}

func (o V1SingleAnswerPost200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1SingleAnswerPost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.ErrMsg) {
		toSerialize["err_msg"] = o.ErrMsg
	}
	return toSerialize, nil
}

type NullableV1SingleAnswerPost200Response struct {
	value *V1SingleAnswerPost200Response
	isSet bool
}

func (v NullableV1SingleAnswerPost200Response) Get() *V1SingleAnswerPost200Response {
	return v.value
}

func (v *NullableV1SingleAnswerPost200Response) Set(val *V1SingleAnswerPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV1SingleAnswerPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV1SingleAnswerPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1SingleAnswerPost200Response(val *V1SingleAnswerPost200Response) *NullableV1SingleAnswerPost200Response {
	return &NullableV1SingleAnswerPost200Response{value: val, isSet: true}
}

func (v NullableV1SingleAnswerPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1SingleAnswerPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


