/*
api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package UpStudyGoSdk

import (
	"encoding/json"
)

// checks if the SolverSelfSimpleResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SolverSelfSimpleResponse{}

// SolverSelfSimpleResponse struct for SolverSelfSimpleResponse
type SolverSelfSimpleResponse struct {
	// User's Latex input
	Input *string `json:"input,omitempty"`
	// The solution we believe the user most likely wants
	Solution *SolverSolution `json:"solution,omitempty"`
}

// NewSolverSelfSimpleResponse instantiates a new SolverSelfSimpleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSolverSelfSimpleResponse() *SolverSelfSimpleResponse {
	this := SolverSelfSimpleResponse{}
	return &this
}

// NewSolverSelfSimpleResponseWithDefaults instantiates a new SolverSelfSimpleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSolverSelfSimpleResponseWithDefaults() *SolverSelfSimpleResponse {
	this := SolverSelfSimpleResponse{}
	return &this
}

// GetInput returns the Input field value if set, zero value otherwise.
func (o *SolverSelfSimpleResponse) GetInput() string {
	if o == nil || IsNil(o.Input) {
		var ret string
		return ret
	}
	return *o.Input
}

// GetInputOk returns a tuple with the Input field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SolverSelfSimpleResponse) GetInputOk() (*string, bool) {
	if o == nil || IsNil(o.Input) {
		return nil, false
	}
	return o.Input, true
}

// HasInput returns a boolean if a field has been set.
func (o *SolverSelfSimpleResponse) HasInput() bool {
	if o != nil && !IsNil(o.Input) {
		return true
	}

	return false
}

// SetInput gets a reference to the given string and assigns it to the Input field.
func (o *SolverSelfSimpleResponse) SetInput(v string) {
	o.Input = &v
}

// GetSolution returns the Solution field value if set, zero value otherwise.
func (o *SolverSelfSimpleResponse) GetSolution() SolverSolution {
	if o == nil || IsNil(o.Solution) {
		var ret SolverSolution
		return ret
	}
	return *o.Solution
}

// GetSolutionOk returns a tuple with the Solution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SolverSelfSimpleResponse) GetSolutionOk() (*SolverSolution, bool) {
	if o == nil || IsNil(o.Solution) {
		return nil, false
	}
	return o.Solution, true
}

// HasSolution returns a boolean if a field has been set.
func (o *SolverSelfSimpleResponse) HasSolution() bool {
	if o != nil && !IsNil(o.Solution) {
		return true
	}

	return false
}

// SetSolution gets a reference to the given SolverSolution and assigns it to the Solution field.
func (o *SolverSelfSimpleResponse) SetSolution(v SolverSolution) {
	o.Solution = &v
}

func (o SolverSelfSimpleResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SolverSelfSimpleResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Input) {
		toSerialize["input"] = o.Input
	}
	if !IsNil(o.Solution) {
		toSerialize["solution"] = o.Solution
	}
	return toSerialize, nil
}

type NullableSolverSelfSimpleResponse struct {
	value *SolverSelfSimpleResponse
	isSet bool
}

func (v NullableSolverSelfSimpleResponse) Get() *SolverSelfSimpleResponse {
	return v.value
}

func (v *NullableSolverSelfSimpleResponse) Set(val *SolverSelfSimpleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSolverSelfSimpleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSolverSelfSimpleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSolverSelfSimpleResponse(val *SolverSelfSimpleResponse) *NullableSolverSelfSimpleResponse {
	return &NullableSolverSelfSimpleResponse{value: val, isSet: true}
}

func (v NullableSolverSelfSimpleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSolverSelfSimpleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


